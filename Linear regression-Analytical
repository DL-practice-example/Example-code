# -*- coding: utf-8 -*-


import numpy as np 
from numpy.linalg import inv
import matplotlib.pyplot as plt

def estimate_coefficients(x, y): 
    

    x=np.hstack((x.reshape(10,1), np.ones((10,1))))
    W=np.dot(inv(np.dot(x.transpose(),x)), np.dot(x.transpose(),y))
    b_0=W[1]
    b_1=W[0]
    return(b_0, b_1)

    # x,y are the location of points on graph
    # color of the points change it to red blue orange play around



def plot_regression_line(x, y, b): 
    # plotting the points as per dataset on a graph
    plt.scatter(x, y, color = "m",marker = "o", s = 30) 

    # predicted response vector 
    y_pred = b[0] + b[1]*x 
  
    # plotting the regression line
    plt.plot(x, y_pred, color = "g")
  
    # putting labels for x and y axis
    plt.xlabel('Size') 
    plt.ylabel('Cost') 
  
    # function to show plotted graph
    plt.show()
    

    


def main(): 
    # Datasets which we create 
    x = np.array([ 1,   2,   3,   4,   5,   6,   7,   8,    9,   10]).reshape(10,1)
    y = np.array([300, 350, 500, 700, 800, 850, 900, 900, 1000, 1200]).reshape(10,1)
  
    # estimating coefficients 
    b = estimate_coefficients(x, y) 
    print("Estimated coefficients:\nb_0 = {} \nb_1 = {}".format(b[0], b[1])) 
  
    # plotting regression line 
    plot_regression_line(x, y, b)

    

main()
